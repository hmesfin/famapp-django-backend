# Generated by Django 5.1.12 on 2025-10-13 03:14

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shared', '0004_groceryitem'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Public UUID for external API references and URLs', unique=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Legacy UUID field - will be removed after migration to public_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this record was first created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Soft delete flag - if True, record is considered deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='When this record was soft deleted', null=True)),
                ('name', models.CharField(help_text='Pet name', max_length=100)),
                ('species', models.CharField(choices=[('dog', 'Dog'), ('cat', 'Cat'), ('bird', 'Bird'), ('fish', 'Fish'), ('other', 'Other')], default='other', help_text='Pet species', max_length=20)),
                ('breed', models.CharField(blank=True, help_text='Pet breed', max_length=100)),
                ('age', models.IntegerField(blank=True, help_text='Pet age in years', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional pet notes')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User who soft deleted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('family', models.ForeignKey(help_text='Family this pet belongs to', on_delete=django.db.models.deletion.CASCADE, to='shared.family')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pet',
                'verbose_name_plural': 'Pets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PetActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Public UUID for external API references and URLs', unique=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Legacy UUID field - will be removed after migration to public_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this record was first created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Soft delete flag - if True, record is considered deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='When this record was soft deleted', null=True)),
                ('activity_type', models.CharField(choices=[('feeding', 'Feeding'), ('walking', 'Walking'), ('grooming', 'Grooming'), ('vet_visit', 'Vet Visit'), ('medication', 'Medication'), ('playtime', 'Playtime'), ('other', 'Other')], help_text='Type of pet activity', max_length=20)),
                ('scheduled_time', models.DateTimeField(help_text='When this activity is scheduled')),
                ('notes', models.TextField(blank=True, help_text='Activity notes')),
                ('is_completed', models.BooleanField(default=False, help_text='Whether the activity has been completed')),
                ('completed_at', models.DateTimeField(blank=True, help_text='When this activity was completed', null=True)),
                ('completed_by', models.ForeignKey(blank=True, help_text='User who completed this activity', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='petactivity_completed_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User who soft deleted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('pet', models.ForeignKey(help_text='Pet this activity is for', on_delete=django.db.models.deletion.CASCADE, to='shared.pet')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pet Activity',
                'verbose_name_plural': 'Pet Activities',
                'ordering': ['-created_at'],
            },
        ),
    ]
