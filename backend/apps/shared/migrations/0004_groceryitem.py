# Generated by Django 5.1.12 on 2025-10-13 03:08

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shared', '0003_scheduleevent'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GroceryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Public UUID for external API references and URLs', unique=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Legacy UUID field - will be removed after migration to public_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this record was first created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Soft delete flag - if True, record is considered deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='When this record was soft deleted', null=True)),
                ('name', models.CharField(help_text='Item name', max_length=200)),
                ('quantity', models.IntegerField(default=1, help_text='Quantity to purchase')),
                ('unit', models.CharField(blank=True, help_text='Unit of measurement (e.g., lbs, dozen)', max_length=50)),
                ('category', models.CharField(choices=[('produce', 'Produce'), ('dairy', 'Dairy'), ('meat', 'Meat'), ('bakery', 'Bakery'), ('pantry', 'Pantry'), ('frozen', 'Frozen'), ('other', 'Other')], default='other', help_text='Grocery category', max_length=20)),
                ('is_purchased', models.BooleanField(default=False, help_text='Whether the item has been purchased')),
                ('added_by', models.ForeignKey(blank=True, help_text='User who added this item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='groceryitem_added_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User who soft deleted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('family', models.ForeignKey(help_text='Family this item belongs to', on_delete=django.db.models.deletion.CASCADE, to='shared.family')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Grocery Item',
                'verbose_name_plural': 'Grocery Items',
                'ordering': ['-created_at'],
            },
        ),
    ]
