# Generated by Django 5.1.12 on 2025-09-12 01:15

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Public UUID for external API references and URLs', unique=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Legacy UUID field - will be removed after migration to public_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this record was first created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Soft delete flag - if True, record is considered deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='When this record was soft deleted', null=True)),
                ('bio', models.TextField(blank=True, default='', help_text="User's biography or description")),
                ('location', models.CharField(blank=True, default='', help_text="User's location", max_length=100)),
                ('website', models.URLField(blank=True, default='', help_text="User's personal website")),
                ('company', models.CharField(blank=True, default='', help_text="User's company or organization", max_length=100)),
                ('avatar_url', models.URLField(blank=True, default='', help_text="URL to user's avatar image")),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User who soft deleted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(help_text='The user this profile belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
                'db_table': 'profiles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Public UUID for external API references and URLs', unique=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Legacy UUID field - will be removed after migration to public_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this record was first created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('email_notifications', models.BooleanField(default=True, help_text='Receive email notifications')),
                ('push_notifications', models.BooleanField(default=False, help_text='Receive push notifications')),
                ('theme', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark'), ('auto', 'Auto')], default='light', help_text='UI theme preference', max_length=10)),
                ('language', models.CharField(default='en', help_text='Preferred language code', max_length=10)),
                ('timezone', models.CharField(default='UTC', help_text="User's timezone", max_length=50)),
                ('profile_visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('friends', 'Friends Only')], default='public', help_text='Profile visibility setting', max_length=10)),
                ('show_email', models.BooleanField(default=False, help_text='Show email address on public profile')),
                ('show_activity', models.BooleanField(default=True, help_text='Show activity on public profile')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional settings metadata')),
                ('user', models.OneToOneField(help_text='The user these settings belong to', on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Settings',
                'verbose_name_plural': 'User Settings',
                'db_table': 'user_settings',
                'ordering': ['-created_at'],
            },
        ),
    ]
